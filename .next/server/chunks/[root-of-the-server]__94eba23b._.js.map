{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/astik/Downloads/astikachatbotapp/app/config/db.js"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nlet cached = global.mongoose || { conn: null, promise: null };\r\n\r\nexport default async function connectDB() {\r\n  if (cached.conn) return cached.conn;\r\n\r\n  if (!cached.promise) {\r\n    cached.promise = mongoose.connect(process.env.MONGODB_URI).then((mongoose) => mongoose);\r\n  }\r\n\r\n  try {\r\n    cached.conn = await cached.promise;\r\n  } catch (error) {\r\n    console.error(\"Error connecting to MongoDB:\", error);\r\n  }\r\n\r\n  return cached.conn;\r\n}\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,IAAI,SAAS,4CAAO,QAAQ,IAAI;IAAE,MAAM;IAAM,SAAS;AAAK;AAE7C,eAAe;IAC5B,IAAI,OAAO,IAAI,EAAE,OAAO,OAAO,IAAI;IAEnC,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,OAAO,OAAO,GAAG,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,WAAa;IAChF;IAEA,IAAI;QACF,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IACpC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gCAAgC;IAChD;IAEA,OAAO,OAAO,IAAI;AACpB","debugId":null}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/astik/Downloads/astikachatbotapp/app/models/Chat.js"],"sourcesContent":["import mongoose from \"mongoose\";\r\nconst ChatSchema=new mongoose.Schema(\r\n    {\r\n        \r\n        name: {type:String,required: true},\r\n        messages:[\r\n            {\r\n                role: {type:String,required: true},\r\n                content: {type:String,required: true},\r\n                timestamp: {type:Number,required: true},\r\n\r\n            }\r\n        ],\r\n        userId: {type:String,required: true},\r\n\r\n    },\r\n    {timestamps: true}\r\n);\r\n\r\nconst Chat=mongoose.models.Chat || mongoose.model(\"Chat\",ChatSchema)\r\nexport default Chat;"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,aAAW,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAChC;IAEI,MAAM;QAAC,MAAK;QAAO,UAAU;IAAI;IACjC,UAAS;QACL;YACI,MAAM;gBAAC,MAAK;gBAAO,UAAU;YAAI;YACjC,SAAS;gBAAC,MAAK;gBAAO,UAAU;YAAI;YACpC,WAAW;gBAAC,MAAK;gBAAO,UAAU;YAAI;QAE1C;KACH;IACD,QAAQ;QAAC,MAAK;QAAO,UAAU;IAAI;AAEvC,GACA;IAAC,YAAY;AAAI;AAGrB,MAAM,OAAK,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,QAAO;uCAC1C","debugId":null}},
    {"offset": {"line": 146, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/astik/Downloads/astikachatbotapp/app/api/chat/ai/route.js"],"sourcesContent":["export const maxDuration = 60;\r\nimport { GoogleGenerativeAI } from \"@google/generative-ai\";\r\nimport { getAuth } from \"@clerk/nextjs/server\";\r\nimport { NextResponse } from \"next/server\";\r\nimport connectDB from \"../../../config/db\";\r\nimport Chat from \"../../../models/Chat\";\r\nconst genAI = new GoogleGenerativeAI(process.env.API_KEY);\r\n\r\nexport async function POST(req) {\r\n  try {\r\n    const { userId } = getAuth(req);\r\n    const { chatid, prompt } = await req.json();\r\n\r\n    if (!userId) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        message: \"User not authenticated\",\r\n      });\r\n    }\r\n\r\n    await connectDB();\r\n    const data = await Chat.findOne({ userId, _id: chatid });\r\n\r\n    const userPrompt = {\r\n      role: \"user\",\r\n      content: prompt,\r\n      timestamp: Date.now(),\r\n    };\r\n    data.message.push(userPrompt);\r\n\r\n    const model = genAI.getGenerativeModel({ model: \"gemini-1.5-flash\" });\r\n    const result = await model.generateContent(prompt);\r\n    const response = await result.response;\r\n    const aiMessage = {\r\n      role: \"assistant\",\r\n      content: response.text(),\r\n      timestamp: Date.now(),\r\n    };\r\n\r\n    data.message.push(aiMessage);\r\n    await data.save();\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: aiMessage,\r\n    });\r\n  } catch (error) {\r\n    return NextResponse.json({\r\n      success: false,\r\n      error: error.message,\r\n    });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AACA;AALO,MAAM,cAAc;;;;;;AAM3B,MAAM,QAAQ,IAAI,gKAAA,CAAA,qBAAkB,CAAC,QAAQ,GAAG,CAAC,OAAO;AAEjD,eAAe,KAAK,GAAG;IAC5B,IAAI;QACF,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,6KAAA,CAAA,UAAO,AAAD,EAAE;QAC3B,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,IAAI,IAAI;QAEzC,IAAI,CAAC,QAAQ;YACX,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBACvB,SAAS;gBACT,SAAS;YACX;QACF;QAEA,MAAM,CAAA,GAAA,qHAAA,CAAA,UAAS,AAAD;QACd,MAAM,OAAO,MAAM,uHAAA,CAAA,UAAI,CAAC,OAAO,CAAC;YAAE;YAAQ,KAAK;QAAO;QAEtD,MAAM,aAAa;YACjB,MAAM;YACN,SAAS;YACT,WAAW,KAAK,GAAG;QACrB;QACA,KAAK,OAAO,CAAC,IAAI,CAAC;QAElB,MAAM,QAAQ,MAAM,kBAAkB,CAAC;YAAE,OAAO;QAAmB;QACnE,MAAM,SAAS,MAAM,MAAM,eAAe,CAAC;QAC3C,MAAM,WAAW,MAAM,OAAO,QAAQ;QACtC,MAAM,YAAY;YAChB,MAAM;YACN,SAAS,SAAS,IAAI;YACtB,WAAW,KAAK,GAAG;QACrB;QAEA,KAAK,OAAO,CAAC,IAAI,CAAC;QAClB,MAAM,KAAK,IAAI;QAEf,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,MAAM;QACR;IACF,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,OAAO,MAAM,OAAO;QACtB;IACF;AACF","debugId":null}}]
}