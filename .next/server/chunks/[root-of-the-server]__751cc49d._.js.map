{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/astik/Downloads/astikachatbotapp/app/api/chat/ai/route.js"],"sourcesContent":["import connectDB from \"@/config/db\";\r\nimport Chat from \"@/models/Chat\";\r\nimport { NextResponse } from \"next/server\";\r\nimport { GoogleGenAI } from \"@google/genai\";\r\nimport { getAuth } from \"@clerk/nextjs/server\";\r\n\r\nexport async function POST(req) {\r\n  await connectDB();\r\n\r\n  const { userId } = getAuth(req);\r\n  const { chatId, prompt } = await req.json();\r\n\r\n  if (!userId) {\r\n    return NextResponse.json({ success: false, message: \"Unauthorized\" }, { status: 401 });\r\n  }\r\n\r\n  try {\r\n    const ai = new GoogleGenAI({ apiKey: process.env.GOOGLE_API_KEY });\r\n\r\n    const geminiRes = await ai.models.generateContent({\r\n      model: \"gemini-1.5-flash\",\r\n      contents: prompt,\r\n    });\r\n\r\n    const assistantMessage = {\r\n      role: \"assistant\",\r\n      content: geminiRes.response.text(),\r\n      timestamp: Date.now(),\r\n    };\r\n\r\n    // Push both user and assistant messages\r\n    await Chat.findByIdAndUpdate(chatId, {\r\n      $push: {\r\n        messages: [\r\n          {\r\n            role: \"user\",\r\n            content: prompt,\r\n            timestamp: Date.now(),\r\n          },\r\n          assistantMessage,\r\n        ],\r\n      },\r\n      $set: {\r\n        updatedAt: new Date(),\r\n      },\r\n    });\r\n\r\n    return NextResponse.json({ success: true, data: assistantMessage });\r\n  } catch (error) {\r\n    console.error(\"AI Chat Error:\", error);\r\n    return NextResponse.json({ success: false, message: \"Failed to generate response\" });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;;;;;;AAEA;;;;;;AAEO,eAAe,KAAK,GAAG;IAC5B,MAAM;IAEN,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,6KAAA,CAAA,UAAO,AAAD,EAAE;IAC3B,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,IAAI,IAAI;IAEzC,IAAI,CAAC,QAAQ;QACX,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAO,SAAS;QAAe,GAAG;YAAE,QAAQ;QAAI;IACtF;IAEA,IAAI;QACF,MAAM,KAAK,IAAI,YAAY;YAAE,QAAQ,QAAQ,GAAG,CAAC,cAAc;QAAC;QAEhE,MAAM,YAAY,MAAM,GAAG,MAAM,CAAC,eAAe,CAAC;YAChD,OAAO;YACP,UAAU;QACZ;QAEA,MAAM,mBAAmB;YACvB,MAAM;YACN,SAAS,UAAU,QAAQ,CAAC,IAAI;YAChC,WAAW,KAAK,GAAG;QACrB;QAEA,wCAAwC;QACxC,MAAM,KAAK,iBAAiB,CAAC,QAAQ;YACnC,OAAO;gBACL,UAAU;oBACR;wBACE,MAAM;wBACN,SAAS;wBACT,WAAW,KAAK,GAAG;oBACrB;oBACA;iBACD;YACH;YACA,MAAM;gBACJ,WAAW,IAAI;YACjB;QACF;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAM,MAAM;QAAiB;IACnE,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,kBAAkB;QAChC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAO,SAAS;QAA8B;IACpF;AACF","debugId":null}}]
}